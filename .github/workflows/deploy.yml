name: Deploy to Render

on:
  push:
    branches:
      - main  # Развертывание будет происходить при каждом пуше в ветку main
  workflow_dispatch:  # Позволяет запускать его вручную

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
      DJANGO_ENV: ${{ secrets.DJANGO_ENV }}
      DEBUG: ${{ secrets.DEBUG }}
      ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
      CORS_ALLOWED_ORIGINS: ${{ secrets.CORS_ALLOWED_ORIGINS }}
      BREVO_API_KEY: ${{ secrets.BREVO_API_KEY }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_API_VERSION: ${{ secrets.STRIPE_API_VERSION }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
      SHOP_ID: ${{ secrets.SHOP_ID }}
      KASSA_SECRET_KEY: ${{ secrets.KASSA_SECRET_KEY }}
      BASE_URL: ${{ secrets.BASE_URL }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DATABASE_URL: "postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -U -r requirements.txt 

      - name: Run migrations
        run: python manage.py migrate

      # - name: Load fixture data
      #   run: python manage.py loaddata quiz_app/fixtures/quizzes.json

      - name: Trigger Render deployment
        run: |
          curl -X POST "https://api.render.com/v1/services/srv-${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
  

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#       # Проверка кода из репозитория
#       - name: Checkout code
#         uses: actions/checkout@v3

#       # Настройка Python
#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: '3.10'

#       # Устанавливаем зависимости
#       - name: Install dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -U -r requirements.txt 

#       # Выполним миграции
#       - name: Run migrations
#         run: |
#           export DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
#           export DJANGO_ENV=${{ secrets.DJANGO_ENV }}
#           export DEBUG=${{ secrets.DEBUG }}
#           export ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}
#           export CORS_ALLOWED_ORIGINS=${{ secrets.CORS_ALLOWED_ORIGINS }}
#           export BREVO_API_KEY=${{ secrets.BREVO_API_KEY }}
#           export EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}
#           export EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}
#           export STRIPE_PUBLISHABLE_KEY=${{ secrets.STRIPE_PUBLISHABLE_KEY }}
#           export STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
#           export STRIPE_API_VERSION=${{ secrets.STRIPE_API_VERSION }}
#           export STRIPE_WEBHOOK_SECRET=${{ secrets.STRIPE_WEBHOOK_SECRET }}
#           export SHOP_ID=${{ secrets.SHOP_ID }}
#           export KASSA_SECRET_KEY=${{ secrets.KASSA_SECRET_KEY }}
#           export BASE_URL=${{ secrets.BASE_URL }}
#           export DB_USER=${{ secrets.DB_USER }}
#           export DB_PASSWORD=${{ secrets.DB_PASSWORD }}
#           export DB_HOST=${{ secrets.DB_HOST }}
#           export DB_PORT=${{ secrets.DB_PORT }}
#           export DB_NAME=${{ secrets.DB_NAME }}
#           export DATABASE_URL="postgres://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}"
#           python manage.py migrate

#       # Загрузка фикстур (например, пользователей)
#       - name: Load fixture data for users
#         run: python manage.py loaddata auth_app/fixtures/users.json

#       # Запуск развертывания на Render
#       - name: Trigger Render deployment
#         run: |
#           curl -X POST "https://api.render.com/v1/services/srv-${{ secrets.RENDER_SERVICE_ID }}/deploys" \
#             -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}"
  